#!/usr/bin/env python
from misc.utility.scons_hints import *

Import("env")

import platform_linuxbsd_builders

common_linuxbsd = [
    "crash_handler_linuxbsd.cpp",
    "os_linuxbsd.cpp",
    "freedesktop_portal_desktop.cpp",
    "freedesktop_screensaver.cpp",
    "freedesktop_at_spi_monitor.cpp",
]

if env["use_sowrap"]:
    common_linuxbsd.append("xkbcommon-so_wrap.c")

if env["x11"]:
    common_linuxbsd += SConscript("x11/SCsub")

if env["wayland"]:
    common_linuxbsd += SConscript("wayland/SCsub")

if env["speechd"]:
    common_linuxbsd.append("tts_linux.cpp")
    if env["use_sowrap"]:
        common_linuxbsd.append("speechd-so_wrap.c")

if env["fontconfig"]:
    if env["use_sowrap"]:
        common_linuxbsd.append("fontconfig-so_wrap.c")

if env["dbus"]:
    if env["use_sowrap"]:
        common_linuxbsd.append("dbus-so_wrap.c")

if env["builtin_mimalloc"]:
    mimalloc_dir = "#thirdparty/mimalloc/"
    env.Prepend(CPPPATH=[mimalloc_dir + "include"])
    env.Append(CPPDEFINES=[("MI_TRACK_ASAN", 1 if env["use_asan"] else 0)])
    if env["use_tsan"]:
        env.Append(CPPDEFINES=["MI_TSAN"])
    else:
        env.Append(CFLAGS=["-fno-builtin-malloc"])
        env.Append(CPPDEFINES=["MI_MALLOC_OVERRIDE"])
    common_linuxbsd.append(mimalloc_dir + "src/static.c")

prog = env.add_program("#bin/godot", ["godot_linuxbsd.cpp"] + common_linuxbsd)

if env["debug_symbols"] and env["separate_debug_symbols"]:
    env.AddPostAction(prog, env.Run(platform_linuxbsd_builders.make_debug_linuxbsd))
